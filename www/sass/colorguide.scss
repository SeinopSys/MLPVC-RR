@import "../css/jquery.qtip.min.css";
@import "vars";
@import "_theme_ctxmenu";
// Mobile-only
@media all and (max-width: 650px){
	#list > li > div {
		&:last-child { max-width: 100% }
		> img {
			display: none;
		}
	}
	div.tags {
		white-space: initial !important;
		border-style: solid;
		border-width: 1px 0;
		width: 100%;
		padding: 3px 0;

		&:before {
			content: "Tags: ";
			font-weight: bold;
		}

		> span {
			background-color: transparent !important;

			&:not(:last-child):after {
				content: ",";
				font-weight: normal;
				color: #434343;
			}
		}
	}
}
// Desktop-only
@media all and (min-width: 650px){
	div.tags > span {
		padding: 3px 5px;
		border: 1px solid;
		cursor: default;

		&:not(:last-child) { margin-right: 5px }
	}
	#list > li > div:last-child { max-width: calc(100% - 160px) }

	.notice.tagediting { display: none }
}
#list {
	padding: 0;
	margin: 0;

	> li {
		padding: 10px;
		color: #434343;
		background-color: rgba(black,.05);
		border: 1px solid rgba(black,.2);
		box-shadow: 0 0 2px rgba(black,.2);
    display: flex;
    flex-flow: row nowrap;

		&:not(:last-child) { margin-bottom: 10px }

		> * {
			flex: 0 0 auto;
			max-width: 100%;
		}
		> div {
			> img {
				margin-right: 10px;
				width: 150px;
			}
			> :not(img):not(:last-child) { margin-bottom: 6px }
			> strong {
				display: block;
				font-size: 1.5em;

				button { margin-left: 8px }
			}
			.notes:empty { display: none }
		}
	}
}

$_TBase: #0c70b1;
$TDefault: gray;
$TCategory: $_TBase;
$TSpecies: adjust_hue($_TBase, -70);
$TGender: adjust_hue($_TBase, 60);
$TAppearance: adjust_hue($_TBase, 120);
$TEpisode: adjust_hue($_TBase, 200);

@mixin tag-style($color:$TDefault, $icon:false){
	color: darken($color, 5);
	background-color: lighten($color, 50);
	@if ($icon != false){
			&:before { content: $icon }
	}
}

div.tags {
	user-select: none;
	> span {
		display: inline-block;
		font-weight: bold;

		&[title] { cursor: help }
		&:before {
			//noinspection CssNoGenericFontName
			font-family: 'Typicons';
			margin-right: 5px;
		}

		&:not([class*=typ-]) { @include tag-style($TDefault) }
		&.typ-cat { @include tag-style($TCategory, '\e083')	}
		&.typ-spec { @include tag-style($TSpecies, '\e148') }
		&.typ-gen { @include tag-style($TGender, '\e12c') }
		&.typ-app { @include tag-style($TAppearance, '\e07e') }
		&.typ-ep { @include tag-style($TEpisode, '\e131') }
	}
}

ul.colors {
	display: block;
	padding: 0;
	list-style: none;
	white-space: initial !important;

	> li {
		display: inline-block;
		border: 1px solid rgba(black, .2);
		background-color: rgba(black, .05);
		padding: 4px;
		margin: 0 5px 5px 0;

		> span:not(.cat) {
			display: inline-block;
			$size: 16px;
			$border: 1px;
			border: $border solid #000;
			width: #{$size - $border*2};
			height: #{$size - $border*2};
			vertical-align: middle;
			cursor: pointer;
			font-size: 0;
			transform: scale(1);

			&:active { transform: scale(.8) }
		}
	}
}

%qtip-custom {
	font-size: 16px;
	line-height: initial !important;
	min-width: initial !important;

	.qtip-titlebar {
		padding: 5px;
		text-align: center;
		border-bottom: 1px solid;
		background: inherit;

		+ .qtip-content { font-size: .75em }
	}
	.qtip-content {
		padding: 5px;
		text-align: center;
	}
}

.qtip-see-thru {
	background-color: rgba(white,.8);
	border: 1px solid rgba(black,.7);
	box-shadow: 0 0 2px rgba(black,.7);

	@extend %qtip-custom;
}

.qtip-tag {
	@include tag-style($TDefault);

	border-color: initial !important;

	@extend %qtip-custom;
}

.qtip-tag-cat { @include tag-style($TCategory) }
.qtip-tag-spec { @include tag-style($TSpecies) }
.qtip-tag-gen { @include tag-style($TGender) }
.qtip-tag-app { @include tag-style($TAppearance) }
.qtip-tag-ep { @include tag-style($TEpisode) }

#edit-tag select[name=type] option {
	&[value=""]{ @include tag-style($TDefault) }
	&[value=cat] { @extend .qtip-tag-cat }
	&[value=spec] { @extend .qtip-tag-spec }
	&[value=gen] { @extend .qtip-tag-gen }
	&[value=app] { @extend .qtip-tag-app }
	&[value=ep] { @extend .qtip-tag-ep }
}
