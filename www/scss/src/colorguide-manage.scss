@import "vars";
@import "colorguide_vars";

.tag > .uses {
	font-weight: normal;
	font-size: .9em;
	padding: 1px 2px;
}
.tag.monospace > .uses {
	font-family: $monospace;
}
.algolia-autocomplete {
	.aa-dataset-tags {
		background: #fff;

		.tag {
			display: block;
			margin: 0;
			white-space: nowrap !important;
		}
	}
	input { font-weight: normal !important }
	.aa-suggestion .tag {
		margin: 0 !important;
		display: block !important;
	}
	&.loading {
		position:relative;

		&:after {
			content: "";
			display: block;
			position: absolute;
			top: 5px;
			// padding + border + margin
			right: 5px + 1px + 5px;

			@include sprite-animation(16px, 16px, 12, 'indicator');
		}
	}
	.addtag { cursor: text }
}
.tag.addtag.aa-hint { color: rgba(black, .4) !important }

#pony-editor .ace_editor {
	height: 150px;

	&, * {
		font-size: 13px !important;
	}
}

#edit-tag .type-selector {
	display: flex;
	flex-flow: row wrap;
	align-content: center;
	user-select: none;

	> span { margin-bottom: 5px }

	label {
		flex: 1 1 auto;
		margin: 2px;
		position: relative;
		overflow: hidden;

		* { cursor: pointer }
	}
	input {
		position: absolute;
		top: -20px;
		left: -20px;
		width: 0;
		height: 0;

		~ .tag {
			display: block;
			height: auto;
		}
		&:not(:checked) ~ .tag { opacity: .5 }
		&:focus ~ .tag { border-style: dashed }
		&:not(:checked):focus ~ .tag { opacity: .75 }
	}
}

#cg-editor {
	overflow: hidden;

	label.major {
		> input[type="checkbox"]:not(:checked) {
			+ br, + input[type="text"] {
				display: none;
			}
		}
	}

	.clr { @extend %clr }

	.clrs.ace_editor {
		.ace_color {
			color: $NDarkBlue;
			font-weight: bold;
		}
		.ace_colorname { color: #006000 }
	}
}

#cg-reorder .cgs ol {
	list-style-position: inside;
	margin: 0;
	padding: 0;
	counter-reset: list;

	li {
		display: inline-block;
		margin: 2px;
		padding: 2px;
		font-size: 14px;
		color: $NBlue;
		border: 1px solid;
		border-radius: 5px;
		background: $NBlueBG;
		cursor: move;

		&.moving { box-shadow: 0 0 10px rgba(0,0,0,.5) }

		&:before {
      content: counter(list) ". ";
      counter-increment: list;
		}
	}
}
