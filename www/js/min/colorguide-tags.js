'use strict';DocReady.push(function(){'use strict';var a=window.TAG_TYPES_ASSOC,b=$('#tags').children('tbody'),c=function(a,c){if(!this.status)return $.Dialog.fail(!1,this.message);if('function'==typeof a)return a.call(this,c);a.remove(),$.Dialog.success(!1,this.message);var d=window.location.pathname;0===b.children().length&&(d=d.replace(/(\d+)$/,function(a){return 1<a?a-1:a})),$.toPage(d,!0,!0)},d=function(a){return $.mkAjaxHandler(function(){if(this.status||$.Dialog.fail(!1,this.message),this.counts){var c=this.counts;b.children().each(function(){var a=$(this).children(),b=parseInt(a.first().text().trim(),10);'undefined'!=typeof c[b]&&a.last().children('span').text(c[b])})}a?$.Dialog.success(!1,this.message,!0):$.Dialog.close()})};window.CGTagEditing=function(b,f,g,e){switch(g){case'delete':$.Dialog.confirm('Detele tag: '+b,'Deleting this tag will also remove it from every appearance where it\u2019s been used.<br>Are you sure?',['Delete it','Nope'],function(a){a&&($.Dialog.wait(!1,'Sending removal request'),$.post('/cg/tag/del/'+f,$.mkAjaxHandler(function(){c.call(this,e,g)})))});break;case'synon':case'merge':var h='merge'===g,i=h?'Merge':'Synonymize';$.Dialog.wait(i+' '+b+' '+(h?'into':'with')+' another tag','Retrieving tag list from server'),$.post('/cg/get-tags',{not:f,action:g},$.mkAjaxHandler(function(){if(!this.length)return this.undo?window.CGTagEditing.call(this,b,f,'unsynon',e):$.Dialog.fail(!1,this.message);var d=$.mk('form','tag-'+g),j=$.mk('select').attr('required',!0).attr('name','targetid'),k={},l=[];$.each(this,function(b,c){var d=c.type,e='<option value="'+c.tid+'">'+c.name+'</option>';return d?void('undefined'==typeof k[d]&&(k[d]=$.mk('optgroup').attr('label',a[d]),l.push(d)),k[d].append(e)):j.append(e)}),$.each(l,function(a,b){j.append(k[b])}),d.append('<p>'+(h?'Merging a tag into another will permanently delete it, while replacing it with the merge target on every appearance which used it.':'Synonymizing a tag will keep both tags in the database, but when searching, the source tag will automatically redirect to the target tag.')+'</p>',$.mk('label').append('<span>'+i+' <strong>'+b+'</strong> '+(h?'into':'with')+' the following:</span>',j)),$.Dialog.request(!1,d,i,function(a){a.on('submit',function(b){b.preventDefault();var d=a.mkData();$.Dialog.wait(!1,(h?'Merging':'Synonymizing')+' tags'),$.post('/cg/tag/'+g+'/'+f,d,$.mkAjaxHandler(function(){c.call(this,e,g)}))})})}));break;case'unsynon':var j=this.message;$.Dialog.close(function(){$.Dialog.confirm('Remove synonym from '+b,j,['Yes, continue\u2026','Cancel'],function(a){if(a){var d=$.mk('div').html(j).find('strong').prop('outerHTML'),h=$.mk('form','synon-remove').html('<p>If you leave the option below checked, <strong>'+b+'</strong> will be added to all appearances where '+d+' is used, preserving how the tags worked while the synonym was active.</p>\n\t\t\t\t\t\t\t\t<p>If you made these tags synonyms by accident and don\u2019t want <strong>'+b+'</strong> to be added to each appearance where '+d+' is used, you should uncheck the box below.</p>\n\t\t\t\t\t\t\t\t<label><input type="checkbox" name="keep_tagged" checked><span>Preserve current tag connections</span></label>');$.Dialog.request(!1,h,'Remove synonym',function(a){a.on('submit',function(b){b.preventDefault();var d=a.mkData();$.Dialog.wait(!1,'Removing synonym'),$.post('/cg/tag/unsynon/'+f,d,$.mkAjaxHandler(function(){c.call(this,e,g)}))})})}})});break;case'refresh':$.Dialog.wait('Refresh use count of '+b,'Updating use count'),$.post('/cg/tags/recount-uses',{tagids:f},d());}},b.on('click','button',function(a){a.preventDefault();var b=$(this),c=b.parents('tr'),d=c.children().eq(1).text().trim(),e=parseInt(c.children().first().text().trim(),10),f=this.className.split(' ').pop();window.CGTagEditing(d,e,f,c)}),$('.refresh-all').on('click',function(){var a=[];b.children().each(function(){a.push($(this).children().first().text().trim())}),$.Dialog.wait('Recalculate tag usage data','Updating use count'+(1===a.length?'':'s')),$.post('/cg/tags/recount-uses',{tagids:a.join(',')},d(!0))})});
//# sourceMappingURL=/js/min/colorguide-tags.js.map
