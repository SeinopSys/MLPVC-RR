"use strict";ace.define("ace/mode/colorguide",["require","exports","ace/mode/colorguide_highlight_rules","ace/mode/text","ace/lib/oop"],function(a,b){"use strict";function c(){this.HighlightRules=function(){this.$rules={start:[{token:"comment.line",regex:/^\/\/.+$/},{token:"invalid",regex:/^(?:[^\/]+\/{2}.*|\/(?:[^\/]?.*)?)$/},{token:"invalid",regex:/^\s*[^#].*$/},{token:"color",regex:/^\s*#(?:[a-f\d]{6}|[a-f\d]{3})\s+/},{token:"invalid",regex:/^\s*#\S*[^a-f\d\s]\S*?(\s|$)/},{token:"invalid",regex:/^\s*#(?:[a-f\d]{1,5}|[a-f\d]{4,5}|[a-f\d]{7,})?\S?/},{token:"colorname",regex:/\s*[a-z\d][ -~]{2,29}\s*$/},{token:"invalid",regex:/\s*.*[^ -~].*\s*$/},{token:"invalid",regex:/\s*(?:.{1,2}|.{30,})\s*$/},{caseInsensitive:!0}],color:[{token:"constant.other",regex:/^\s*#(?:[a-f\d]{6}|[a-f\d]{3})/}],colorname:[{token:"string.unquoted",regex:/[^\s#][ -~]{2,29}\s*$/}]}},d.inherits(this.HighlightRules,a("./text_highlight_rules").TextHighlightRules)}var d=a("../lib/oop");d.inherits(c,a("./text").Mode),c.prototype.getNextLineIndent=function(){return""},c.prototype.$id="ace/mode/colorguide",b.Mode=c});
//# sourceMappingURL=/js/min/ace\mode-colorguide.js.map
