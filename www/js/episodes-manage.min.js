$(function(){function e(){r.find("td[data-epid]").each(function(){var e=$(this),t=e.attr("data-epid");e.removeAttr("data-epid").data("epid",t)}),r.find(".edit-episode").off("click").on("click",function(t){t.preventDefault();var a=$(this),i=a.closest("tr").data("epid"),o="Editing "+i;$.ajax({method:"POST",url:"/episode/"+i,success:function(t){if("object"!=typeof t)return console.log(t)&&$w.trigger("ajaxerror");if(t.status){var a=s.clone();a.find("input[name=twoparter]").prop("checked",t.ep.twoparter===!0),delete t.ep.twoparter;var i=t.epid;delete t.epid,$.each(t.ep,function(e,t){a.find("input[name="+e+"]").val(t)}),$.Dialog.request("Editing",a,"editep","Save",function(){$("#editep").on("submit",function(t){t.preventDefault();var a=$(this).serializeArray(),n={};$.each(a,function(e,t){n[t.name]=t.value}),$.Dialog.wait(o,"Saving edits"),$.ajax({method:"POST",url:"/episode/edit/"+i,data:n,success:function(t){return"object"!=typeof t?console.log(t)&&$w.trigger("ajaxerror"):void(t.status?(l.html(t.tbody),e(),$.Dialog.close()):$.Dialog.fail(o,t.message))}})})})}else $.Dialog.fail(o,t.message)}})}),r.find(".delete-episode").off("click").on("click",function(t){t.preventDefault();var a=$(this),i=a.closest("tr").data("epid"),o="Deleting "+i;$.Dialog.confirm(o,"<p>This will remove <strong>ALL</strong> requests & reservations associated with the episode, too.</p><p>Are you sure you want to delete it?</p>",function(t){t&&($.Dialog.wait(o),$.ajax({method:"POST",url:"/episode/delete/"+i,success:function(t){return"object"!=typeof t?console.log(t)&&$w.trigger("ajaxerror"):void(t.status?(l.html(t.tbody),l.children(".empty").length&&n.html(n.data("none")).next().show(),e(),$.Dialog.close()):$.Dialog.fail(o,t.message))}}))})})}var t=window.EP_TITLE_REGEX,a=t.toString().split("/")[1],i='<label><input type="number" min=1 max=8 name=season placeholder="Season #" required></label>\r\n			<label><input type="number" min=1 max=26 name=episode placeholder="Episode #" required></label>\r\n			<label><input type="text" maxlength=255 name=title placeholder=Title pattern="'+a+'" autocomplete=off required></label>\r\n			<div class="notice info align-center">\r\n				<p><strong>Title</strong> must be between 5 and 35 characters.<br>Letters, numbers, and these characters, are allowed:<br>-, apostrophe, !, &, comma.</p>\r\n			</div>\r\n			<label>\r\n				<input type="checkbox" name=twoparter> Two-parter\r\n			</label>\r\n			<div class="notice info align-center">\r\n				<p>If <strong>Two-parter</strong> is checked, only specify<br>the episode number of the first part</p>\r\n			</div>',o=$("#content"),n=o.children("h1"),r=$("#episodes"),l=r.children("tbody"),d=$(document.createElement("form")).attr("id","addep").html(i),s=$(document.createElement("form")).attr("id","editep").html(i);$("#add-episode").on("click",function(t){t.preventDefault();var a="Add Episode";$.Dialog.request(a,d.clone(),"addep","Add",function(){$("#addep").on("submit",function(t){t.preventDefault();var i=$(this).serializeArray(),o={};$.each(i,function(e,t){o[t.name]=t.value}),$.Dialog.wait(a,"Adding episode to database"),$.ajax({method:"POST",url:"/episode/add",data:o,success:function(t){return"object"!=typeof t?console.log(t)&&$w.trigger("ajaxerror"):void(t.status?(l.html(t.tbody),n.html(n.data("list")).next().hide(),e(),$.Dialog.close()):$.Dialog.fail(a,t.message))}})})})}),e()});