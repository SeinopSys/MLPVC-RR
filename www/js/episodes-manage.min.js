$(function(){function e(e){return 10>e?"0"+e:e}function t(e){return $.each(e,function(t,i){e[t]=parseInt(i,10)}),e}function i(e){var i=t(e.split("-"));return i[1]--,i}function n(e){return t(e.split(":"))}function a(e,t,a){var r=i(e),o=n(t),s=new Date(r[0],r[1],r[2],10);return s["set"+(a?"UTC":"")+"Hours"](o[0]),s["set"+(a?"UTC":"")+"Minutes"](o[1]),s}function r(e){var t=$("#upcoming");0===t.length&&e&&(t=$.mk("section").attr("id","upcoming").insertBefore($("#sidebar").children(".welcome, .login")),t.append($.mk("h2").text("Upcoming episodes"),$.mk("ul"))),e?t.children("ul").html(e):t.remove(),window.setCD(),window.updateTimesF()}function o(e){var t=$.mk("form").attr("id",e).html('<div class=input-group><input type="number" min=1 max=8 name=season placeholder="Season #" required><input type="number" min=1 max=26 name=episode placeholder="Episode #" required></div>\r\n			<label><input type="text" maxlength=255 name=title placeholder=Title pattern="'+f+'" autocomplete=off required></label>\r\n			<div class="notice info align-center">\r\n				<p><strong>Title</strong> must be between 5 and 35 characters.<br>Letters, numbers, and these characters, are allowed:<br>-, apostrophe, !, &, comma.</p>\r\n			</div>\r\n			<div class=input-group><input type="date" name=airdate placeholder="YYYY-MM-DD" required><input type="time" name=airtime placeholder="HH:MM" required></div>\r\n			<div class="notice info align-center button-here">\r\n				<p>Specify when the episode will air, in <strong>your computer\'s timezone</strong>.</p>\r\n			</div>\r\n			<label><input type="checkbox" name=twoparter> Has two parts</label>\r\n			<div class="notice info align-center">\r\n				<p>If this is checked, only specify the episode number of the first part</p>\r\n			</div>');return $.mk("button").text("Set time to "+h+" this Saturday").on("click",function(e){e.preventDefault(),$(this).parent().prev().children().first().val(c).next().val(h)}).appendTo(t.children(".button-here")),t}function s(e){"string"==typeof e&&(l.html(e),l.children(".empty").length?v.html(v.data("none")).next().show():v.html(v.data("list")).next().hide(),l.trigger("updatetimes")),d.find("tr[data-epid]").each(function(){var e=$(this),t=e.attr("data-epid");e.removeAttr("data-epid").data("epid",t)}),d.find(".edit-episode").off("click").on("click",function(e){e.preventDefault();var t=$(this),i=t.closest("tr").data("epid"),n="Editing "+i;$.Dialog.wait(n,"Getting episode details from server"),$.post("/episode/"+i,$.mkAjaxHandler(function(){if(this.status){var e=w.clone(!0,!0);e.find("input[name=twoparter]").prop("checked",!!this.ep.twoparter),delete this.ep.twoparter;var t=a(this.ep.airdate,this.ep.airtime,!0);this.ep.airdate=t.toAirDate(),this.ep.airtime=t.toAirTime();var i=this.epid;delete this.epid,$.each(this.ep,function(t,i){e.find("input[name="+t+"]").val(i)}),$.Dialog.request("Editing",e,"editep","Save",function(){$("#editep").on("submit",function(e){e.preventDefault();var t=$(this).mkData(),o=a(t.airdate,t.airtime);delete t.airdate,delete t.airtime,t.airs=o.toISOString(),$.Dialog.wait(n,"Saving edits"),$.post("/episode/edit/"+i,t,$.mkAjaxHandler(function(){this.status?(s(this.tbody),r(this.upcoming),$.Dialog.close()):$.Dialog.fail(n,this.message)}))})})}else $.Dialog.fail(n,this.message)}))}),d.find(".delete-episode").off("click").on("click",function(e){e.preventDefault();var t=$(this),i=t.closest("tr").data("epid"),n="Deleting "+i;$.Dialog.confirm(n,"<p>This will remove <strong>ALL</strong><ul><li>requests</li><li>reservations</li><li>video links</li><li>and votes</li></ul>associated with the episode, too.</p><p>Are you sure you want to delete it?</p>",function(e){e&&($.Dialog.wait(n),$.post("/episode/delete/"+i,$.mkAjaxHandler(function(){this.status?(s(this.tbody),r(this.upcoming),$.Dialog.close()):$.Dialog.fail(n,this.message)})))})})}var d=$("#episodes"),l=d.children("tbody");s.call({init:!0});var p=new Date,u=new Date(p.getTime());u.setDate(u.getDate()+6-u.getDay()),u.setUTCHours(15),u.setUTCMinutes(30),Date.prototype.toAirDate=function(){return e(this.getFullYear())+"-"+e(this.getMonth()+1)+"-"+e(this.getDate())},Date.prototype.toAirTime=function(){return e(this.getHours())+":"+e(this.getMinutes())};var c=u.toAirDate(),h=u.toAirTime(),m=window.EP_TITLE_REGEX,f=m.toString().split("/")[1],g=$("#content"),v=g.children("h1"),D=new o("addep"),w=new o("editep");$("#add-episode").on("click",function(e){e.preventDefault();var t="Add Episode";$.Dialog.request(t,D.clone(!0,!0),"addep","Add",function(){var e=$("#addep");e.on("submit",function(i){i.preventDefault();var n=e.find("input[name=airdate]").attr("disabled",!0).val(),o=e.find("input[name=airtime]").attr("disabled",!0).val(),d=a(n,o).toISOString(),l=$(this).mkData({airs:d});$.Dialog.wait(t,"Adding episode to database"),$.post("/episode/add",l,$.mkAjaxHandler(function(){this.status?(s(this.tbody),r(this.upcoming),$.Dialog.close()):$.Dialog.fail(t,this.message)}))})})})});
//# sourceMappingURL=episodes-manage.min.js.map