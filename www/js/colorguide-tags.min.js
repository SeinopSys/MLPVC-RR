DocReady.push(function(){"use strict";var e=window.TAG_TYPES_ASSOC,t=$("#tags").children("tbody"),n=function(e,n){if(!this.status)return $.Dialog.fail(!1,this.message);if("function"==typeof e)return e.call(this,n);e.remove(),$.Dialog.success(!1,this.message);var a=window.location.pathname;0===t.children().length&&(a=a.replace(/(\d+)$/,function(e){return e>1?e-1:e})),$.toPage(a,!0,!0)};window.CGTagEditing=function(t,i,o,s){switch(o){case"delete":$.Dialog.confirm("Detele tag: "+t,"Deleting this tag will also remove it from every appearance where it's been used.<br>Are you sure?",["Delete it","Nope"],function(e){e&&($.Dialog.wait(!1,"Sending removal request"),$.post("/colorguide/deltag/"+i,$.mkAjaxHandler(function(){n.call(this,s,o)})))});break;case"synon":case"merge":var r="merge"===o,l=r?"Merge":"Synonymize";$.Dialog.wait(l+" "+t+" into another tag","Retrieving tag list from server"),$.post("/colorguide/gettags",{not:i,action:o},$.mkAjaxHandler(function(){if(!this.length)return this.undo?window.CGTagEditing.call(this,t,i,"unsynon",s):$.Dialog.fail(!1,this.message+"asdasasdasd");var a=$.mk("form").attr("id","tag-"+o),c=$.mk("select").attr("required",!0).attr("name","targetid"),g={},u=[];$.each(this,function(t,n){var a=n.type,i=$.mk("option").attr("value",n.tid).text(n.name);return a?("undefined"==typeof g[a]&&(g[a]=$.mk("optgroup").attr("label",e[a]),u.push(a)),void g[a].append(i)):c.append(i)}),$.each(u,function(e,t){c.append(g[t])}),a.append($.mk("p").text(r?"Merging a tag into another will permanently delete it, while replacing it with the merge target on every appearance which used it.":"Synonymizing a tag will keep both tags in the database, but when searching, the source tag will automatically redirect to the target tag."),$.mk("label").append($.mk("span").html(l+" <strong>"+t+"</strong> "+(r?"into":"with")+" the following:"),c)),$.Dialog.request(!1,a,"tag-"+o,l,function(e){e.on("submit",function(t){t.preventDefault();var a=e.mkData();$.Dialog.wait(!1,(r?"Merging":"Synonymizing")+" tags"),$.post("/colorguide/"+o+"tag/"+i,a,$.mkAjaxHandler(function(){n.call(this,s,o)}))})})}));break;case"unsynon":var c=this.message;$.Dialog.close(function(){$.Dialog.confirm("Remove synonym from "+t,c,["Yes, continueâ€¦","Cancel"],function(e){if(e){var a=$.mk("p").html(c).children("strong"),r=$.mk("form").attr("id","synon-remove").append($.mk("p").append("If you leave the option below checked, ",$.mk("strong").text(t)," will be added to all appearances where ",a.clone()," is used, preserving how the tags worked while the synonym was active."),$.mk("p").append("If you made these tags synonyms by accident and don't want ",$.mk("strong").text(t)," to be added to each appearance where ",a.clone()," is used, you should uncheck the box below."),$.mk("label").append($.mk("input").attr({type:"checkbox",name:"keep_tagged",checked:!0}),"<span>Preserve current tag connections</span>"));$.Dialog.request(!1,r,"synon-remove","Remove synonym",function(e){e.on("submit",function(t){t.preventDefault();var a=e.mkData();$.Dialog.wait(!1,"Removing synonym"),$.post("/colorguide/unsynontag/"+i,a,$.mkAjaxHandler(function(){n.call(this,s,o)}))})})}})});break;case"refresh":$.Dialog.wait("Refresh use count of "+t,"Updating use count"),$.post("/colorguide/recounttag",{tagids:i},a())}},t.on("click","button",function(e){e.preventDefault();var t=$(this),n=t.parents("tr"),a=n.children().eq(1).text().trim(),i=parseInt(n.children().first().text().trim(),10),o=this.className.split(" ").pop();window.CGTagEditing(a,i,o,n)});var a=function(e){return $.mkAjaxHandler(function(){if(this.status||$.Dialog.fail(!1,this.message),this.counts){var n=this.counts;t.children().each(function(){var e=$(this).children(),t=parseInt(e.first().text().trim(),10);"undefined"!=typeof n[t]&&e.last().children("span").text(n[t])})}e?$.Dialog.success(!1,this.message,!0):$.Dialog.close()})};$(".refresh-all").on("click",function(){var e=[],n="Recalculate tag usage data";t.children().each(function(){e.push($(this).children().first().text().trim())}),$.Dialog.wait(n,"Updating use count"+(1!==e.length?"s":"")),$.post("/colorguide/recounttag",{tagids:e.join(",")},a(!0))})});
//# sourceMappingURL=colorguide-tags.min.js.map
