# <WebSocket server Let's Encrypt connection handling>
map $http_upgrade $connection_upgrade {
	default upgrade;
	'' close;
}
upstream websocket {
	# Change port to match the one set in MLPVC-WS/config.js
	server 127.0.0.1:4200;
}
server {
	listen 80;
	server_name ws.domain.tld;
	location / {
		proxy_pass https://websocket;
		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection $connection_upgrade;
		allow all;
	}
}
# </WebSocket server Let's Encrypt connection handling>

server {
	listen 80;
	# Uncomment if you want to set up a self-signed certificate for HTTPS
	#listen 443 ssl http2;
	root /path/to/public;
	server_name domain.tld *.domain.tld;
	error_log /path/to/logs/error.log;
	index index.php;

	# Redirects unknown subdomains to the main domain
	if ($host != 'domain.tld'){
		return 302 $scheme://domain.tld$request_uri;
	}

	add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
	add_header X-Frame-Options "sameorigin" always;
	add_header X-XSS-Protection "1; mode=block" always;
	add_header X-Content-Type-Options "nosniff" always;

	# Uncomment if you want to set up a self-signed certificate for HTTPS
	## from https://cipherli.st/
	## and https://raymii.org/s/tutorials/Strong_SSL_Security_On_nginx.html
	#ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
	#ssl_prefer_server_ciphers on;
	#ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
	#ssl_ecdh_curve secp384r1;
	#ssl_session_cache shared:SSL:10m;
	#ssl_stapling on;
	#ssl_stapling_verify on;
	#resolver 8.8.8.8 8.8.4.4 valid=300s;
	#resolver_timeout 5s;
	#ssl_certificate /path/to/domain.tld.pem;
	#ssl_certificate_key /path/to/domain.tld.pem;
	## Make sure you ran the optional commands in the "nginx" section of CONTRIBUTING.md before uncommenting this
	#ssl_dhparam /etc/ssl/certs/dhparam.pem;

	location /apple-touch-icon.png {
		return 301 /img/favicons-v1/apple-touch-icon.png;
	}
	location /browserconfig.xml {
		return 301 /img/favicons-v1/browserconfig.xml;
	}
	location / {
		try_files $uri $uri/ =404;
		if (!-e $request_filename){
			# Remove trailing slash
			rewrite ^/(.*)/$ /$1 permanent;
			# Redirect requests to the engine
			rewrite "^" / last;
			break;
		}
	}
	location ~ ^/api/ {
		rewrite ^ /index.php last;
	}

	gzip on;
	gzip_proxied any;
	gzip_comp_level 9;
	gzip_types text/plain text/css text/javascript application/json image/svg+xml;
	gzip_vary on;
	
	error_page 404 /404;
	error_page 403 /404;

	location ~ \.php$ {
		include fastcgi_params;
		try_files $uri $uri/ =404;
		fastcgi_pass unix:/run/php/php7.1-fpm.sock;
		fastcgi_index index.php;
		fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
	}
}
