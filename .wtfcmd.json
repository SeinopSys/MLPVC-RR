[
	{
		"group": "db",
		"name": ["migrate", "m"],
		"desc": [
			"Run pending migrations",
			"Requires `composer install` to be run in the project first"
		],
		"cmd": {
			"bash": "vendor/bin/phinx migrate",
			"powershell": "vendor\\bin\\phinx migrate"
		}
	},
	{
		"group": "db",
		"name": ["rollback", "r"],
		"desc": [
			"Roll back migrations",
			"Requires `composer install` to be run in the project first"
		],
		"cmd": {
			"bash": "vendor/bin/phinx rollback",
			"powershell": "vendor\\bin\\phinx rollback"
		}
	},
	{
		"group": "db",
		"name": ["create", "c"],
		"desc": [
			"Create a migration with the specified name",
			"Requires `composer install` to be run in the project first"
		],
		"cmd": {
			"bash": "vendor/bin/phinx create {{.name}}",
			"powershell": "vendor\\bin\\phinx create {{.name}}"
		},
		"args": [
			{
				"name": "name",
				"desc": "Name for the migration class (CamelCase)",
				"required": true,
				"test": "^[A-Z][A-Za-z\\d]+$"
			}
		]
	},
	{
		"name": "gulp",
		"desc": [
			"Run the \"default\" gulp task to compile all assets in their current state and start a file watcher to update them when changes are made",
			"Requires `yarn install` and `npm install gulp -g` to be run first"
		],
		"cmd": "gulp default"
	},
	{
		"name": ["tests", "t"],
		"desc": [
			"Run tests",
			"Requires `composer install` to be run in the project first"
		],
		"cmd": {
			"bash": "vendor/bin/phpunit",
			"powershell": "vendor\\bin\\phpunit"
		}
	}
]
